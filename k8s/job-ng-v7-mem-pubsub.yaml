apiVersion: batch/v1
kind: Job
metadata:
  name: abadia-ng-pubsub
  labels:
    name: abadia-ng-pubsub
spec:
  template:
    metadata:
        labels:
            name: abadia-ng-pubsub
    spec:
      containers:
      - name: engine
        image: gcr.io/abadia-1/abadia-ng:runtime
        command: ["/bin/bash", "-c"]
        args:
          - |
            ls -ld /tmp/pod
            mkdir -p /tmp/pod/VigasocoSDL
            cp -a /home/abadIA/VigasocoSDL-AI/VigasocoSDL/* /tmp/pod/VigasocoSDL
            sleep 120 
            (while true
                do 
                  ls -lt /tmp/pod/* | head
                  cd /tmp/pod/VigasocoSDL&&./loop-abadIA-HEADLESS.sh
                  sleep 2
                done) &
            CHILD_PID=$!
            (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill $CHILD_PID; echo "Killed $CHILD_PID as the main container terminated."; fi; sleep 1; done) &
            wait $CHILD_PID
            if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; echo "Job completed. Exiting..."; fi
        volumeMounts:                 
          - mountPath: /tmp/pod
            name: tmp-pod
            readOnly: false
        resources:
              requests:
                memory: "5Mi"
                cpu: "300m"
              limits:
                memory: "100Mi"
                cpu: "940m"
      - name: agent
        image: gcr.io/abadia-1/abadia-agent-ng:v7
        command: ["/bin/bash", "-c"]
        args:
          - |
            export DOCKERIZE_VERSION=v0.6.1
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
            && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
            && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            dockerize -wait tcp://localhost:4477 -timeout 2m
            trap "touch /tmp/pod/main-terminated" EXIT
            pip3 install -e gym_abadia
            mkdir -p models games snapshots
            while true
                do
                options=`gcloud pubsub subscriptions pull agent-batches --auto-ack --limit=1 --format="value(DATA)"`
                echo "I will execute $options"
                case $options in
                    "exit")
                    echo "OK I will exit now"
                    exit 0
                    ;;
                    "")
                    echo "No more batches, no more fun ..."
                    exit 0
                    ;;
                    *_0_0.c*)
                    echo "game over checkpoint"
                    ;;
                    *)
                    python3 $options 
                    ;;
                esac
                done
        volumeMounts:                 
          - mountPath: /tmp/pod
            name: tmp-pod
        resources:
              requests:
                memory: "50Mi"
                cpu: "300m"
              limits:
                memory: "1024Mi"
                cpu: "940m"
      restartPolicy: OnFailure
      volumes:
        - name: tmp-pod
          emptyDir:
            medium: Memory
            sizeLimit: "1Gi"
  backoffLimit: 4
